# ΘΕΜΑ ∆  2020
# Ένας οργανισμός διεξάγει διαγωνισμό για την πρόσληψη τριών (3) υπαλλήλων, στον οποίο προσήλθαν
# είκοσι (20) υποψήφιοι. Οι υποψήφιοι, μεταξύ άλλων, θα πρέπει να συμπληρώσουν ένα τεστ που αποτελείται
# από δεκαπέντε (15) ερωτήσεις πολλαπλής επιλογής. Κάθε ερώτηση έχει πέντε (5) δυνατές απαντήσεις, οι
# οποίες χαρακτηρίζονται από τα γράμματα α, β, γ, δ και ε. Μία από τις απαντήσεις α, β, γ και δ είναι η
# σωστή, ενώ η απάντηση "ε" σημαίνει «∆εν γνωρίζω». Ο υποψήφιος για κάθε ερώτηση έχει μία και μόνο επιλογή.
# Αν η επιλογή αντιστοιχεί στη σωστή απάντηση βαθμολογείται με τρεις (3) μονάδες, αν είναι λανθασμένη,
# αφαιρείται μία (1) μονάδα και αν έχει επιλεγεί το "ε", δεν βαθμολογείται [μηδέν (0) μονάδες]. Οι σωστές
# απαντήσεις βρίσκονται στη λίστα LI["α", "δ", "γ", "β", "δ", "γ", "β", "α", "δ", "γ", "β", "δ", "γ", "β", "α"].
# Να αναπτύξετε πρόγραμμα σε γλώσσα προγραμματισμού Python, το οποίο να πραγματοποιεί τα παρακάτω: 
# ∆1. Για κάθε υποψήφιο: 
#     α)  Να διαβάζει από το πληκτρολόγιο το όνομά του και να το εισάγει στη λίστα ON[ ] (μον. 3). 
#     β) Να διαβάζει από το πληκτρολόγιο διαδοχικά τις δεκαπέντε (15) απαντήσεις που έδωσε και να υπολογίζει
#        τη συνολική βαθμολογία του, σύμφωνα με την περιγραφόμενη διαδικασία βαθμολόγησης και χρήση της λίστας
#        LI[ ]. Η συνολική βαθμολογία του εισάγεται στη λίστα SV[ ] (μον. 10).                          Μονάδες 13
# ∆2. Να εμφανίζει τα ονόματα των υποψηφίων που είχαν βαθμολογία μεγαλύτερη ή ίση από τον μέσο όρο όλων των
#     βαθμολογιών.                                                                                      Μονάδες 6 
# ∆3. Να εμφανίζει τα ονόματα των τριών (3) υποψηφίων που είχαν την υψηλότερη βαθμολογία. (Θεωρήστε ότι οι
#     βαθμολογίες είναι διαφορετικές μεταξύ τους).                                                      Μονάδες 6



# Αρχικοποίηση λιστών
LI = ["α", "δ", "γ", "β", "δ", "γ", "β", "α", "δ", "γ", "β", "δ", "γ", "β", "α"]
ON = []
SV = []

# Δ1 για κάθε έναν από τους 20 υποψηφίους διαβάζουμε όνομα και 15 απαντήσεις
for i in range(20):
    x = raw_input("Δώστε όνομα: ")
    ON.append(x)
    sum = 0

    for j in range(15):
        print "Δώστε την ", j+1, " απάντηση"
        ap = raw_input()
        while ap != "α" and ap != "β" and ap != "γ" and ap != "δ" and ap != "ε":
            print "Δώστε την ", j+1, " απάντηση"
            ap = raw_input()
        # Υπολογισμός βαθμολογίας του υποψηφίου
        if LI[j] == ap:
            sum = sum + 3
        elif ap!= "ε":
            sum = sum - 1
    SV.append(sum)

# Δ2 Εμφάνιση ονομάτων υποψηφίων που είχαν βαθμολογία μεγαλύτερη ή ίση του ΜΟ
sum = 0.0
for x in SV:
    sum = sum + x
mo = sum/20
print "Οι υποψήφιοι που ξεπέρασαν τον μέσο όρο της συνολικής βαθμολογίας είναι: "
for i in range(20):
    if SV[i] >= mo:
        print ON[i]

# Δ3 Εμφάνιση των 3 ονομάτων με τηην υψηλότερη βαθμολογία
# Ταξινόμηση Φυσσαλίδας
for i in range(len(SV)-1):
    for j in range (len(SV)-1, i, -1):
        if SV[j] > SV[j-1]:
            SV[j], SV[j-1] = SV[j-1], SV[j]
            ON[j], ON[j-1] = ON[j-1], ON[j]
print "Οι υποψήφιοι με τις 3 υψηλότερες βαθμολογίες ήταν:"
print ON[0], ON[1], ON[2]
