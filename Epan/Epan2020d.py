# ΘΕΜΑ ∆ 2020
# Σε έναν διαγωνισμό ρομποτικής συμμετέχουν 200 διαγωνιζόμενοι. Στην 1η φάση του διαγωνισμού
# ο κάθε διαγωνιζόμενος βαθμολογείται από  τέσσερις (4) κριτές. Η βαθμολογία του κάθε κριτή 
# είναι από 1 έως και 100 μονάδες. Η συνολική βαθμολογία του κάθε διαγωνιζόμενου προκύπτει 
# από το άθροισμα των μονάδων των τεσσάρων (4) κριτών. Στην επόμενη φάση του διαγωνισμού 
# προκρίνονται 50 διαγωνιζόμενοι που συγκέντρωσαν τις περισσότερες μονάδες. Όσοι διαγωνιζόμενοι
# έχουν τις ίδιες μονάδες με τον πεντηκοστό διαγωνιζόμενο προκρίνονται και αυτοί. 
# Να αναπτύξετε πρόγραμμα σε γλώσσα προγραμματισμού Python το οποίο να πραγματοποιεί τα παρακάτω: 
# ∆1. Για κάθε διαγωνιζόμενο: 
#     α) Να διαβάζει το ονοματεπώνυμό του και να το καταχωρίζει σε λίστα με όνομα NAME (μον. 2). 
#     β) Να διαβάζει τις βαθμολογίες των τεσσάρων (4) κριτών με έλεγχο ορθότητας τιμών (μον. 2). 
#        Στη συνέχεια να υπολογίζει τη συνολική βαθμολογία και να την καταχωρίζει σε λίστα με 
#        όνομα VATH (μον. 2).                                                           Μονάδες 6 
# ∆2. Να καλεί συνάρτηση, την οποία θα έχετε υλοποιήσει με τρόπο ώστε να δέχεται τις παραπάνω
#     λίστες και να τις ταξινομεί σε φθίνουσα σειρά ως προς τη βαθμολογία.              Μονάδες 4 
# ∆3. Να εμφανίζει τα ονοματεπώνυμα και τη βαθμολογία των διαγωνιζομένων που προκρίνονται στην
#     επόμενη φάση.                                                                     Μονάδες 6 
# ∆4. α) Να υπολογίζει και να εμφανίζει τον μέσο όρο της βαθμολογίας των προκριθέντων (μον. 4). 
#     β) Να υπολογίζει και να εμφανίζει το ποσοστό των διαγωνιζομένων που συγκέντρωσαν βαθμολογία
#        μεγαλύτερη από 300 μονάδες στο σύνολο των διαγωνιζόμενων (μον. 5).             Μονάδες 9

def bubbleSort(n, v):
    for i in range(len(n)):
        for j in range(len(v)-1, i-1, -1):
            if v[j] > v[j-1]:
                v[j], v[j-1] = v[j-1], v[j]
                n[j], n[j-1] = n[j-1], n[j]

NAME = []
VATH = []
for i in range (200):
    n = raw_input("Enter a name: ")
    NAME.append(n)
    sum = 0
    for j in range(4):
        print "Enter the score of judge ", j+1
        v = int(input())
        while v < 1 or v > 100:
            print "Enter the score of judge ", j+1
            v = int(input())
        sum = sum + v
    VATH.append(sum)
bubbleSort(NAME, VATH)
print "qualify for the next phase"
sum = 0
for i in range(50):
    print NAME[i], VATH[i]
    sum = sum + VATH[i]
avrg = sum / 50.0
print "average score of competitors who advance to the next stage", avrg
if VATH[200] > 300:
    count = 300
else:
    count = 0
    while VATH[count] > 300:
        count = count +1
print "percentage of competitors with a score greater than 300 points", count/2.0, "%"
